#include <iostream>

using namespace std;

struct Node {
    int data;
    Node* next;
};

void push(Node** head_ref, int new_data) {
    Node* new_node = new Node;
    new_node->data = new_data;
    new_node->next = (*head_ref);
    (*head_ref) = new_node;
}

void printList(Node* node) {
    while (node != NULL) {
        cout << node->data << " ";
        node = node->next;
    }
}

void rotateList(Node** head_ref, int k) {
    if (k == 0) return;

    Node* current = (*head_ref);
    int count = 1;

    while (count < k && current != NULL) {
        current = current->next;
        count++;
    }

    if (current == NULL) return;

    Node* kthNode = current;

    while (current->next != NULL) {
        current = current->next;
    }

    current->next = (*head_ref);

    (*head_ref) = kthNode->next;

    kthNode->next = NULL;
}

int main() {
    Node* head = NULL;

    push(&head, 8);
    push(&head, 7);
    push(&head, 6);
    push(&head, 5);
    push(&head, 4);
    push(&head, 3);
    push(&head, 2);
    push(&head, 1);

    cout << "Linked list before rotation: ";
    printList(head);
    cout << endl;

    rotateList(&head, 3);

    cout << "Linked list after rotation: ";
    printList(head);

    return 0;
}

#include <iostream>
#include <stack>
using namespace std;

// Swaps two elements in an array
void swap(int arr[], int i, int j) {
  int temp = arr[i];
  arr[i] = arr[j];
  arr[j] = temp;
}

// Partition function for QuickSort
int partition(int arr[], int low, int high) {
  int pivot = arr[high];
  int i = low - 1;

  for (int j = low; j <= high - 1; j++) {
    if (arr[j] < pivot) {
      i++;
      swap(arr, i, j);
    }
  }

  swap(arr, i + 1, high);

  return (i + 1);
}

// QuickSort function using stack
void quickSort(int arr[], int low, int high) {
  stack<int> s;

  s.push(low);
  s.push(high);

  while (!s.empty()) {
    high = s.top();
    s.pop();
    low = s.top();
    s.pop();

    int p = partition(arr, low, high);

    if (p - 1 > low) {
      s.push(low);
      s.push(p - 1);
    }

    if (p + 1 < high) {
      s.push(p + 1);
      s.push(high);
    }
  }
}

// Utility function to print an array
void printArray(int arr[], int size) {
  for (int i = 0; i < size; i++) {
    cout << arr[i] << " ";
  }

  cout << endl;
}

int main() {
  int arr[] = {10, 7, 8, 9, 1, 5};
  int n = sizeof(arr) / sizeof(arr[0]);

  cout << "Original array: ";
  printArray(arr, n);

  quickSort(arr, 0, n - 1);

  cout << "Sorted array: ";
  printArray(arr, n);

  return 0;
}

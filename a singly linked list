#include <iostream>
#include <stack>
using namespace std;

class Node {
public:
    int data;
    Node* next;

    Node(int data) {
        this->data = data;
        this->next = nullptr;
    }
};

bool isPalindrome(Node* head) {
    stack<int> s;
    Node* temp = head;
    while (temp != nullptr) {
        s.push(temp->data);
        temp = temp->next;
    }
    temp = head;
    while (temp != nullptr) {
        if (temp->data != s.top()) {
            return false;
        }
        s.pop();
        temp = temp->next;
    }
    return true;
}

int main() {
    Node* head = new Node(1);
    head->next = new Node(2);
    head->next->next = new Node(3);
    head->next->next->next = new Node(2);
    head->next->next->next->next = new Node(1);

    if (isPalindrome(head)) {
        cout << "The linked list is a palindrome." << endl;
    }
    else {
        cout << "The linked list is not a palindrome." << endl;
    }

    return 0;
}
